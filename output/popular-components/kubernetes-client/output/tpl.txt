<io.quarkus.test.bootstrap.inject.KubectlClient: void <init>(java.lang.String)>---><io.fabric8.kubernetes.client.ConfigBuilder: void <init>()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void <init>(java.lang.String)>---><io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.ConfigFluent withTrustCerts(boolean)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void <init>(java.lang.String)>---><io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.SundrioConfigFluent withNamespace(java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void <init>(java.lang.String)>---><io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.Config build()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void <init>(java.lang.String)>---><io.fabric8.kubernetes.client.ConfigBuilder: void <init>()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void <init>(java.lang.String)>---><io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.ConfigFluent withTrustCerts(boolean)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void <init>(java.lang.String)>---><io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.Config build()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void <init>(java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: java.lang.String getNamespace()>
<io.quarkus.test.bootstrap.inject.KubectlClient: io.fabric8.kubernetes.client.impl.KubernetesClientImpl createClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.KubernetesClientBuilder: void <init>()>
<io.quarkus.test.bootstrap.inject.KubectlClient: io.fabric8.kubernetes.client.impl.KubernetesClientImpl createClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.KubernetesClientBuilder: io.fabric8.kubernetes.client.KubernetesClientBuilder withConfig(io.fabric8.kubernetes.client.Config)>
<io.quarkus.test.bootstrap.inject.KubectlClient: io.fabric8.kubernetes.client.impl.KubernetesClientImpl createClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.KubernetesClientBuilder: io.fabric8.kubernetes.client.KubernetesClient build()>
<io.quarkus.test.bootstrap.inject.KubectlClient: io.fabric8.kubernetes.client.impl.KubernetesClientImpl createClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.Client adapt(java.lang.Class)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL apps()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation deployments()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.RollableScalableResource: java.lang.Object get()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL apps()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation deployments()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: io.fabric8.kubernetes.client.dsl.Deletable withTimeout(long,java.util.concurrent.TimeUnit)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.Deletable: java.util.List delete()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL apps()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation deployments()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object resource(java.lang.Object)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void applyServicePropertiesUsingDeploymentConfig(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.RollableScalableResource: java.lang.Object create()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.List podsInService(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.List podsInService(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withLabel(java.lang.String,java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.List podsInService(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.FilterWatchListDeletable: java.lang.Object list()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.Map logs()>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.Map logs()>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object list()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.Map logs()>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.Map logs()>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.Map logs()>---><io.fabric8.kubernetes.client.dsl.PodResource: java.lang.String getLog()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.Map logs(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.Map logs(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.Map logs(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.PodResource: java.lang.String getLog()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.lang.String host()>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.NetworkAPIGroupDSL network()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.lang.String host()>---><io.fabric8.kubernetes.client.dsl.NetworkAPIGroupDSL: io.fabric8.kubernetes.client.Config getConfiguration()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.lang.String host()>---><io.fabric8.kubernetes.client.Config: java.lang.String getMasterUrl()>
<io.quarkus.test.bootstrap.inject.KubectlClient: int port(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.quarkus.test.bootstrap.inject.KubectlClient: int port(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: int port(io.quarkus.test.bootstrap.Service)>---><io.fabric8.kubernetes.client.dsl.ServiceResource: java.lang.Object get()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void deleteNamespace()>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: void close()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void deleteNamespace()>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: void close()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void deleteNamespace()>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: void close()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void deleteResourcesByLabel(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: void close()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void deleteResourcesByLabel(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: void close()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void deleteResourcesByLabel(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: void close()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.List loadYaml(java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable load(java.io.InputStream)>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.util.List loadYaml(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NamespaceListVisitFromServerGetDeleteRecreateWaitApplicable: java.util.List items()>
<io.quarkus.test.bootstrap.inject.KubectlClient: java.lang.String enrichTemplate(io.quarkus.test.bootstrap.Service,java.lang.String,java.util.Map)>---><io.fabric8.kubernetes.client.utils.Serialization: java.lang.String asYaml(java.lang.Object)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object edit(java.util.function.UnaryOperator)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object resource(java.lang.Object)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void createOrUpdateConfigMap(java.lang.String,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object createOr(java.util.function.Function)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void doCreateSecretFromFile(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.impl.KubernetesClientImpl: io.fabric8.kubernetes.client.dsl.MixedOperation secrets()>
<io.quarkus.test.bootstrap.inject.KubectlClient: void doCreateSecretFromFile(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.quarkus.test.bootstrap.inject.KubectlClient: void doCreateSecretFromFile(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void <init>()>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL extensions()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation daemonSets()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL extensions()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation deployments()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL extensions()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation replicaSets()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL apps()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.AppsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation statefulSets()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL extensions()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation ingresses()>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.NamespaceVisitFromServerGetWatchDeleteRecreateWaitApplicable resource(io.fabric8.kubernetes.api.model.HasMetadata)>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NamespaceVisitFromServerGetWatchDeleteRecreateWaitApplicable: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyEntity(java.lang.Object,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.VisitFromServerGetWatchDeleteRecreateWaitApplicable: java.lang.Object createOrReplace()>
<io.fabric8.kubernetes.api.Controller: void applyOAuthClient(io.fabric8.openshift.api.model.OAuthClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyOAuthClient(io.fabric8.openshift.api.model.OAuthClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyOAuthClient(io.fabric8.openshift.api.model.OAuthClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyOAuthClient(io.fabric8.openshift.api.model.OAuthClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyOAuthClient(io.fabric8.openshift.api.model.OAuthClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyOAuthClient(io.fabric8.openshift.api.model.OAuthClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void doCreateOAuthClient(io.fabric8.openshift.api.model.OAuthClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void installTemplate(io.fabric8.openshift.api.model.Template,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.ParameterMixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void installTemplate(io.fabric8.openshift.api.model.Template,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void installTemplate(io.fabric8.openshift.api.model.Template,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.ParameterMixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void installTemplate(io.fabric8.openshift.api.model.Template,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void installTemplate(io.fabric8.openshift.api.model.Template,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.ParameterMixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void installTemplate(io.fabric8.openshift.api.model.Template,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: io.fabric8.openshift.client.OpenShiftClient getOpenShiftClientOrNull()>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.Client adapt(java.lang.Class)>
<io.fabric8.kubernetes.api.Controller: void doCreateTemplate(io.fabric8.openshift.api.model.Template,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.ParameterMixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateTemplate(io.fabric8.openshift.api.model.Template,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation serviceAccounts()>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation serviceAccounts()>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation serviceAccounts()>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void doCreateServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation serviceAccounts()>
<io.fabric8.kubernetes.api.Controller: void doCreateServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void doCreateServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation serviceAccounts()>
<io.fabric8.kubernetes.api.Controller: void doCreateServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateServiceAccount(io.fabric8.kubernetes.api.model.ServiceAccount,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation persistentVolumeClaims()>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation persistentVolumeClaims()>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation persistentVolumeClaims()>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void doCreatePersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation persistentVolumeClaims()>
<io.fabric8.kubernetes.api.Controller: void doCreatePersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreatePersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void doCreatePersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation persistentVolumeClaims()>
<io.fabric8.kubernetes.api.Controller: void doCreatePersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreatePersistentVolumeClaim(io.fabric8.kubernetes.api.model.PersistentVolumeClaim,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation secrets()>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation secrets()>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation secrets()>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applySecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void doCreateSecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation secrets()>
<io.fabric8.kubernetes.api.Controller: void doCreateSecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateSecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void doCreateSecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation secrets()>
<io.fabric8.kubernetes.api.Controller: void doCreateSecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateSecret(io.fabric8.kubernetes.api.model.Secret,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyRoute(io.fabric8.openshift.api.model.Route,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoute(io.fabric8.openshift.api.model.Route,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoute(io.fabric8.openshift.api.model.Route,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyRoute(io.fabric8.openshift.api.model.Route,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoute(io.fabric8.openshift.api.model.Route,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyBuildConfig(io.fabric8.openshift.api.model.BuildConfig,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyBuildConfig(io.fabric8.openshift.api.model.BuildConfig,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyBuildConfig(io.fabric8.openshift.api.model.BuildConfig,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyBuildConfig(io.fabric8.openshift.api.model.BuildConfig,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyBuildConfig(io.fabric8.openshift.api.model.BuildConfig,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyBuildConfig(io.fabric8.openshift.api.model.BuildConfig,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateBuildConfig(io.fabric8.openshift.api.model.BuildConfig,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateBuildConfig(io.fabric8.openshift.api.model.BuildConfig,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void doCreateRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateRoleBinding(io.fabric8.openshift.api.model.RoleBinding,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void doCreatePolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreatePolicyBinding(io.fabric8.openshift.api.model.PolicyBinding,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyImageStream(io.fabric8.openshift.api.model.ImageStream,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyImageStream(io.fabric8.openshift.api.model.ImageStream,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyImageStream(io.fabric8.openshift.api.model.ImageStream,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyImageStream(io.fabric8.openshift.api.model.ImageStream,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyImageStream(io.fabric8.openshift.api.model.ImageStream,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void applyImageStream(io.fabric8.openshift.api.model.ImageStream,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NamespaceVisitFromServerGetWatchDeleteRecreateWaitApplicable: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyImageStream(io.fabric8.openshift.api.model.ImageStream,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.VisitFromServerGetWatchDeleteRecreateWaitApplicable: java.lang.Object apply()>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyService(io.fabric8.kubernetes.api.model.Service,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void doCreateResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void doCreateResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateResource(io.fabric8.kubernetes.api.model.HasMetadata,java.lang.String,java.lang.String,io.fabric8.kubernetes.client.dsl.MixedOperation)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void doCreateService(io.fabric8.kubernetes.api.model.Service,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.api.Controller: void doCreateService(io.fabric8.kubernetes.api.model.Service,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateService(io.fabric8.kubernetes.api.model.Service,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void doCreateService(io.fabric8.kubernetes.api.model.Service,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.api.Controller: void doCreateService(io.fabric8.kubernetes.api.model.Service,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateService(io.fabric8.kubernetes.api.model.Service,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: boolean checkNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.Controller: boolean checkNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.NonNamespaceOperation namespaces()>
<io.fabric8.kubernetes.api.Controller: boolean checkNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: boolean checkNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: boolean deleteNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: boolean deleteNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: boolean deleteNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.NonNamespaceOperation namespaces()>
<io.fabric8.kubernetes.api.Controller: boolean deleteNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: boolean deleteNamespace(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyNamespace(java.lang.String,java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: java.lang.String getNamespace()>
<io.fabric8.kubernetes.api.Controller: void applyNamespace(java.lang.String,java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: java.lang.String getNamespace()>
<io.fabric8.kubernetes.api.Controller: boolean applyNamespace(io.fabric8.kubernetes.api.model.Namespace)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.NonNamespaceOperation namespaces()>
<io.fabric8.kubernetes.api.Controller: boolean applyNamespace(io.fabric8.kubernetes.api.model.Namespace)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: boolean applyNamespace(io.fabric8.kubernetes.api.model.Namespace)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: boolean applyNamespace(io.fabric8.kubernetes.api.model.Namespace)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.NonNamespaceOperation namespaces()>
<io.fabric8.kubernetes.api.Controller: boolean applyNamespace(io.fabric8.kubernetes.api.model.Namespace)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.RollableScalableResource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.RollableScalableResource: java.lang.Object rolling()>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.TimeoutImageEditReplacePatchable: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.RollableScalableResource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.RollableScalableResource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withLabels(java.util.Map)>
<io.fabric8.kubernetes.api.Controller: void applyReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.FilterWatchListDeletable: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void doCreateReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.api.Controller: void doCreateReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void doCreateReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.api.Controller: void doCreateReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreateReplicationController(io.fabric8.kubernetes.api.model.ReplicationController,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.PodResource: java.lang.Object get()>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.PodResource: java.lang.Object delete()>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void applyPod(io.fabric8.kubernetes.api.model.Pod,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.PodResource: java.lang.Object replace(java.lang.Object)>
<io.fabric8.kubernetes.api.Controller: void doCreatePod(io.fabric8.kubernetes.api.model.Pod,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.api.Controller: void doCreatePod(io.fabric8.kubernetes.api.model.Pod,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreatePod(io.fabric8.kubernetes.api.model.Pod,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.Controller: void doCreatePod(io.fabric8.kubernetes.api.model.Pod,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.api.Controller: void doCreatePod(io.fabric8.kubernetes.api.model.Pod,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.Controller: void doCreatePod(io.fabric8.kubernetes.api.model.Pod,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object create(java.lang.Object[])>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>---><io.fabric8.kubernetes.client.Config: java.lang.String getUsername()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient$2: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>---><io.fabric8.kubernetes.client.Config: java.lang.String getPassword()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient$3: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>---><io.fabric8.kubernetes.client.Config: java.lang.String getOauthToken()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient$4: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>---><io.fabric8.kubernetes.client.Config: java.lang.String getUserAgent()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: boolean isTrustCerts()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: java.lang.String getUsername()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.utils.Utils: boolean isNotNullOrEmpty(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: java.lang.String getPassword()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.utils.Utils: boolean isNotNullOrEmpty(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: java.lang.String getOauthToken()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: int getConnectionTimeout()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: int getConnectionTimeout()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: int getRequestTimeout()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: int getRequestTimeout()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: java.lang.String getUserAgent()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.Config: java.lang.String getUserAgent()>
<io.fabric8.kubernetes.api.KubernetesHelper$JenkinShiftClient: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config)>---><io.fabric8.kubernetes.client.KubernetesClientException: java.lang.RuntimeException launderThrowable(java.lang.Throwable)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String defaultNamespace()>---><io.fabric8.kubernetes.client.Config: java.lang.String getNamespace()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getPodMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getPodMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getPodMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getPodMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClientException: int getCode()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getFilteredPodMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,io.fabric8.utils.Filter)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getFilteredPodMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,io.fabric8.utils.Filter)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getFilteredPodMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,io.fabric8.utils.Filter)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getServiceMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getServiceMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getServiceMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getReplicationControllerMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getReplicationControllerMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getReplicationControllerMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getSelectedReplicationControllerMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getSelectedReplicationControllerMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getSelectedReplicationControllerMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withLabels(java.util.Map)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.util.Map getSelectedReplicationControllerMap(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.FilterWatchListDeletable: java.lang.Object list()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.api.model.Service)>---><io.fabric8.kubernetes.client.utils.Utils: java.lang.Boolean getSystemPropertyOrEnvVar(java.lang.String,java.lang.Boolean)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClient: java.lang.String getNamespace()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.Client adapt(java.lang.Class)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClientException: int getCode()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClientException: java.lang.String getMessage()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL extensions()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.ExtensionsAPIGroupDSL: io.fabric8.kubernetes.client.dsl.MixedOperation ingresses()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.NonNamespaceOperation nodes()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURLInCurrentNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURLInCurrentNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURLInCurrentNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURLInCurrentNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.Client adapt(java.lang.Class)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURLInCurrentNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String,java.lang.String,boolean)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.KubernetesHelper: boolean isServiceSsl(java.lang.String,int,boolean)>---><io.fabric8.kubernetes.client.utils.Utils: java.lang.String convertSystemPropertyNameToEnvVar(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: io.fabric8.kubernetes.api.model.Secret validateSecretExists(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation secrets()>
<io.fabric8.kubernetes.api.KubernetesHelper: io.fabric8.kubernetes.api.model.Secret validateSecretExists(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: io.fabric8.kubernetes.api.model.Secret validateSecretExists(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: io.fabric8.kubernetes.api.model.Secret validateSecretExists(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.KubernetesHelper: io.fabric8.kubernetes.api.model.Secret validateSecretExists(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClientException: int getCode()>
<io.fabric8.kubernetes.api.KubernetesHelper: io.fabric8.kubernetes.api.model.Secret validateSecretExists(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClientException: int getCode()>
<io.fabric8.kubernetes.api.KubernetesHelper: boolean isOpenShift(io.fabric8.kubernetes.client.KubernetesClient)>---><io.fabric8.kubernetes.client.KubernetesClient: java.net.URL getMasterUrl()>
<io.fabric8.kubernetes.api.KubernetesHelper: boolean isOpenShift(io.fabric8.kubernetes.client.KubernetesClient)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.api.model.RootPaths rootPaths()>
<io.fabric8.kubernetes.api.KubernetesHelper: io.fabric8.kubernetes.client.Config createJenkinshiftConfig(java.lang.String)>---><io.fabric8.kubernetes.client.Config: void <init>()>
<io.fabric8.kubernetes.api.KubernetesHelper: io.fabric8.kubernetes.client.Config createJenkinshiftConfig(java.lang.String)>---><io.fabric8.kubernetes.client.Config: void setMasterUrl(java.lang.String)>
<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getNamespace(io.fabric8.kubernetes.client.KubernetesClient)>---><io.fabric8.kubernetes.client.KubernetesClient: java.lang.String getNamespace()>
<io.fabric8.kubernetes.api.KubernetesHelper: void <clinit>()>---><io.fabric8.kubernetes.client.ConfigBuilder: void <init>()>
<io.fabric8.kubernetes.api.KubernetesHelper: void <clinit>()>---><io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.Config build()>
<io.fabric8.kubernetes.api.builds.BuildWatcher: void poll()>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.builds.BuildWatcher: void poll()>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load()>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load()>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load()>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load()>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load()>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(java.lang.String)>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.environments.Environments: io.fabric8.kubernetes.api.environments.Environments load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String findSpaceNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String findSpaceNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String findSpaceNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String findSpaceNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String)>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String namespaceForEnvironment(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.environments.Environments: java.lang.String getDefaultNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: java.lang.String getNamespace()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration()>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration()>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration()>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration()>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration()>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(java.lang.String)>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: io.fabric8.kubernetes.api.pipelines.PipelineConfiguration loadPipelineConfiguration(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: void savePipelineConfiguration(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,io.fabric8.kubernetes.api.pipelines.PipelineConfiguration)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: void savePipelineConfiguration(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,io.fabric8.kubernetes.api.pipelines.PipelineConfiguration)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: void savePipelineConfiguration(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,io.fabric8.kubernetes.api.pipelines.PipelineConfiguration)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.pipelines.PipelineConfiguration: void savePipelineConfiguration(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String,io.fabric8.kubernetes.api.pipelines.PipelineConfiguration)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object createOrReplace(java.lang.Object[])>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.util.Map)>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.lang.String,java.util.Map)>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.lang.String,java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.lang.String,java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.lang.String,java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.pipelines.Pipelines: io.fabric8.kubernetes.api.pipelines.Pipeline getPipeline(java.lang.String,java.util.Map)>---><io.fabric8.kubernetes.client.KubernetesClient: void close()>
<io.fabric8.kubernetes.api.spaces.Spaces: io.fabric8.kubernetes.api.spaces.Spaces load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation configMaps()>
<io.fabric8.kubernetes.api.spaces.Spaces: io.fabric8.kubernetes.api.spaces.Spaces load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.api.spaces.Spaces: io.fabric8.kubernetes.api.spaces.Spaces load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.api.spaces.Spaces: io.fabric8.kubernetes.api.spaces.Spaces load(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.api.spaces.Spaces: java.lang.String getDefaultNamespace(io.fabric8.kubernetes.client.KubernetesClient,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: java.lang.String getNamespace()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: void <init>()>---><io.fabric8.kubernetes.client.DefaultKubernetesClient: void <init>()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForReplicationController(io.fabric8.kubernetes.api.model.ReplicationController)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForReplicationController(io.fabric8.kubernetes.api.model.ReplicationController)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForReplicationController(io.fabric8.kubernetes.api.model.ReplicationController)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForReplicationController(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForReplicationController(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForReplicationController(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.RollableScalableResource: java.lang.Object get()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForReplicationController(io.fabric8.kubernetes.api.model.ReplicationController)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForReplicationController(io.fabric8.kubernetes.api.model.ReplicationController)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForReplicationController(io.fabric8.kubernetes.api.model.ReplicationController)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForReplicationController(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForReplicationController(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForReplicationController(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForService(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForService(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForService(io.fabric8.kubernetes.api.model.Service)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForService(io.fabric8.kubernetes.api.model.Service)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForService(io.fabric8.kubernetes.api.model.Service)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForService(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForService(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForService(io.fabric8.kubernetes.api.model.Service)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation pods()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForService(io.fabric8.kubernetes.api.model.Service)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: java.util.List clientsForService(io.fabric8.kubernetes.api.model.Service)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object list()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForContainer(java.lang.String,io.fabric8.kubernetes.api.model.Container,io.fabric8.kubernetes.api.model.Pod)>---><io.fabric8.kubernetes.client.KubernetesClient: java.net.URL getMasterUrl()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient clientForContainer(java.lang.String,io.fabric8.kubernetes.api.model.Container,io.fabric8.kubernetes.api.model.Pod)>---><io.fabric8.kubernetes.client.utils.URLUtils: java.lang.String join(java.lang.String[])>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient createJolokiaClient(io.fabric8.kubernetes.api.model.Container,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: java.net.URL getMasterUrl()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient createJolokiaClient(io.fabric8.kubernetes.api.model.Container,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.Config getConfiguration()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient createJolokiaClient(io.fabric8.kubernetes.api.model.Container,java.lang.String)>---><io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.SSLContext sslContext(io.fabric8.kubernetes.client.Config)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient createJolokiaClient(io.fabric8.kubernetes.api.model.Container,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.Config getConfiguration()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: org.jolokia.client.J4pClient createJolokiaClient(io.fabric8.kubernetes.api.model.Container,java.lang.String)>---><io.fabric8.kubernetes.client.Config: java.lang.String getOauthToken()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.ReplicationController requireReplicationController(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation replicationControllers()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.ReplicationController requireReplicationController(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.ReplicationController requireReplicationController(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.ReplicationController requireReplicationController(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.RollableScalableResource: java.lang.Object get()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.Service requireService(java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.Service requireService(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.Service requireService(java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.Service requireService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.KubernetesClient: io.fabric8.kubernetes.client.dsl.MixedOperation services()>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.Service requireService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.MixedOperation: java.lang.Object inNamespace(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.Service requireService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.NonNamespaceOperation: java.lang.Object withName(java.lang.String)>
<io.fabric8.kubernetes.jolokia.JolokiaClients: io.fabric8.kubernetes.api.model.Service requireService(java.lang.String,java.lang.String)>---><io.fabric8.kubernetes.client.dsl.Resource: java.lang.Object get()>