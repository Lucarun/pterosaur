<io.fabric8.kubernetes.client.KubernetesClientException: java.lang.RuntimeException launderThrowable(io.fabric8.kubernetes.client.OperationInfo-InterfaceClass,java.lang.Throwable)><---<io.fabric8.openshift.client.dsl.internal.apps.DeploymentConfigOperationsImpl: java.lang.Object doGetLog(java.lang.Class)>
<io.fabric8.kubernetes.client.KubernetesClientException: java.lang.RuntimeException launderThrowable(io.fabric8.kubernetes.client.OperationInfo-InterfaceClass,java.lang.Throwable)><---<io.fabric8.openshift.client.dsl.internal.apps.DeploymentConfigOperationsImpl: io.fabric8.kubernetes.client.dsl.LogWatch watchLog(java.io.OutputStream)>
<io.fabric8.kubernetes.client.KubernetesClientException: java.lang.RuntimeException launderThrowable(io.fabric8.kubernetes.client.OperationInfo-InterfaceClass,java.lang.Throwable)><---<io.fabric8.openshift.client.dsl.internal.build.BuildOperationsImpl: java.lang.Object doGetLog(java.lang.Class)>
<io.fabric8.kubernetes.client.KubernetesClientException: java.lang.RuntimeException launderThrowable(io.fabric8.kubernetes.client.OperationInfo-InterfaceClass,java.lang.Throwable)><---<io.fabric8.openshift.client.dsl.internal.build.BuildOperationsImpl: io.fabric8.kubernetes.client.dsl.LogWatch watchLog(java.io.OutputStream)>
<io.fabric8.kubernetes.client.KubernetesClientException: java.lang.RuntimeException launderThrowable(io.fabric8.kubernetes.client.OperationInfo-InterfaceClass,java.lang.Throwable)><---<io.fabric8.openshift.client.dsl.internal.core.TemplateOperationsImpl: io.fabric8.kubernetes.api.model.KubernetesList process(java.io.File)>
<io.fabric8.kubernetes.client.KubernetesClientException: java.lang.RuntimeException launderThrowable(io.fabric8.kubernetes.client.OperationInfo-InterfaceClass,java.lang.Throwable)><---<io.fabric8.openshift.client.dsl.internal.core.TemplateOperationsImpl: io.fabric8.kubernetes.api.model.KubernetesList process(java.util.Map)>
<io.fabric8.kubernetes.client.KubernetesClientException: java.lang.RuntimeException launderThrowable(io.fabric8.kubernetes.client.OperationInfo-InterfaceClass,java.lang.Throwable)><---<io.fabric8.openshift.client.dsl.internal.core.TemplateOperationsImpl: io.fabric8.kubernetes.api.model.KubernetesList processLocally(java.io.File)>
<io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperationsImpl: io.fabric8.kubernetes.client.dsl.internal.OperationContext defaultContext(io.fabric8.kubernetes.client.Client-InterfaceClass)><---<io.fabric8.openshift.client.dsl.internal.apps.DeploymentConfigOperationsImpl: void <init>(io.fabric8.kubernetes.client.Client)>
<io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperationsImpl: io.fabric8.kubernetes.client.dsl.internal.OperationContext defaultContext(io.fabric8.kubernetes.client.Client-InterfaceClass)><---<io.fabric8.openshift.client.dsl.internal.authorization.RoleBindingOperationsImpl: void <init>(io.fabric8.kubernetes.client.Client)>
<io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperationsImpl: io.fabric8.kubernetes.client.dsl.internal.OperationContext defaultContext(io.fabric8.kubernetes.client.Client-InterfaceClass)><---<io.fabric8.openshift.client.dsl.internal.build.BuildConfigOperationsImpl: void <init>(io.fabric8.kubernetes.client.Client)>
<io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperationsImpl: io.fabric8.kubernetes.client.dsl.internal.OperationContext defaultContext(io.fabric8.kubernetes.client.Client-InterfaceClass)><---<io.fabric8.openshift.client.dsl.internal.build.BuildOperationsImpl: void <init>(io.fabric8.kubernetes.client.Client)>
<io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperationsImpl: io.fabric8.kubernetes.client.dsl.internal.OperationContext defaultContext(io.fabric8.kubernetes.client.Client-InterfaceClass)><---<io.fabric8.openshift.client.dsl.internal.core.TemplateOperationsImpl: void <init>(io.fabric8.kubernetes.client.Client)>
<io.fabric8.kubernetes.client.dsl.internal.HasMetadataOperationsImpl: io.fabric8.kubernetes.client.dsl.internal.OperationContext defaultContext(io.fabric8.kubernetes.client.Client-InterfaceClass)><---<io.fabric8.openshift.client.dsl.internal.project.ProjectOperationsImpl: void <init>(io.fabric8.kubernetes.client.Client)>
<io.fabric8.kubernetes.client.utils.internal.PodOperationUtil: io.fabric8.kubernetes.api.model.Pod waitUntilReadyOrTerminal(io.fabric8.kubernetes.client.dsl.PodResource-InterfaceClass,int)><---<io.fabric8.openshift.client.dsl.internal.apps.DeploymentConfigOperationsImpl: void waitForBuildPodToBecomeReady(java.util.List,java.lang.Integer)>
<io.fabric8.kubernetes.client.utils.internal.PodOperationUtil: io.fabric8.kubernetes.api.model.Pod waitUntilReadyOrTerminal(io.fabric8.kubernetes.client.dsl.PodResource-InterfaceClass,int)><---<io.fabric8.openshift.client.dsl.internal.build.BuildOperationsImpl: void waitForBuildPodToBecomeReady(java.util.List,java.lang.Integer)>
<io.fabric8.kubernetes.client.WithRequestCallable: void <init>(io.fabric8.kubernetes.client.Client-InterfaceClass,io.fabric8.kubernetes.client.RequestConfig)><---<io.fabric8.knative.client.DefaultKnativeClient: io.fabric8.kubernetes.client.dsl.FunctionCallable withRequestConfig(io.fabric8.kubernetes.client.RequestConfig)>
<io.fabric8.kubernetes.client.WithRequestCallable: void <init>(io.fabric8.kubernetes.client.Client-InterfaceClass,io.fabric8.kubernetes.client.RequestConfig)><---<io.fabric8.knative.client.serving.v1.DefaultServingV1Client: io.fabric8.kubernetes.client.dsl.FunctionCallable withRequestConfig(io.fabric8.kubernetes.client.RequestConfig)>
<io.fabric8.kubernetes.client.dsl.internal.CreateOnlyResourceOperationsImpl: void <init>(io.fabric8.kubernetes.client.Client-InterfaceClass,io.fabric8.kubernetes.client.dsl.base.ResourceDefinitionContext,java.lang.Class,java.lang.Class)><---<io.fabric8.openshift.client.impl.OpenShiftHandlers: io.fabric8.kubernetes.client.dsl.internal.CreateOnlyResourceOperationsImpl getCreateOnlyResourceOperation(java.lang.Class,java.lang.Class,io.fabric8.kubernetes.client.Client)>
<io.fabric8.kubernetes.client.dsl.ScalableResource: io.fabric8.kubernetes.client.Watch watch(io.fabric8.kubernetes.client.Watcher-InterfaceClass)><---<org.apache.dolphinscheduler.plugin.task.api.utils.K8sUtils: io.fabric8.kubernetes.client.Watch createBatchJobWatcher(java.lang.String,io.fabric8.kubernetes.client.Watcher)>
<io.fabric8.kubernetes.client.extension.ExtensionRootClientAdapter: void <init>(io.fabric8.kubernetes.client.Client-InterfaceClass)><---<io.fabric8.knative.client.DefaultKnativeClient: void <init>(io.fabric8.kubernetes.client.Client)>
