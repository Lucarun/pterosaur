<io.fabric8.kubernetes.client.dsl.internal.PodOperationContext: io.fabric8.kubernetes.client.dsl.internal.PodOperationContext withPrettyOutput(boolean)><---<io.fabric8.openshift.client.dsl.internal.apps.DeploymentConfigOperationsImpl: java.lang.String getLog(boolean)>
<io.fabric8.kubernetes.client.dsl.internal.PodOperationContext: io.fabric8.kubernetes.client.dsl.internal.PodOperationContext withPrettyOutput(boolean)><---<io.fabric8.openshift.client.dsl.internal.apps.DeploymentConfigOperationsImpl: io.fabric8.kubernetes.client.dsl.Loggable withPrettyOutput()>
<io.fabric8.kubernetes.client.dsl.internal.PodOperationContext: io.fabric8.kubernetes.client.dsl.internal.PodOperationContext withPrettyOutput(boolean)><---<io.fabric8.openshift.client.dsl.internal.build.BuildOperationsImpl: java.lang.String getLog(boolean)>
<io.fabric8.kubernetes.client.dsl.internal.PodOperationContext: io.fabric8.kubernetes.client.dsl.internal.PodOperationContext withPrettyOutput(boolean)><---<io.fabric8.openshift.client.dsl.internal.build.BuildOperationsImpl: io.fabric8.kubernetes.client.dsl.Loggable withPrettyOutput()>
<io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.ConfigFluent withTrustCerts(boolean)><---<org.springframework.cloud.kubernetes.KubernetesAutoConfiguration: io.fabric8.kubernetes.client.Config kubernetesClientConfig(org.springframework.cloud.kubernetes.KubernetesClientProperties)>
<io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.ConfigFluent withTrustCerts(boolean)><---<io.fabric8.spring.cloud.kubernetes.KubernetesAutoConfiguration: io.fabric8.kubernetes.client.Config kubernetesClientConfig(io.fabric8.spring.cloud.kubernetes.KubernetesClientProperties)>
<io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.ConfigFluent withTrustCerts(boolean)><---<org.eclipse.che.workspace.infrastructure.kubernetes.KubernetesClientFactory: io.fabric8.kubernetes.client.Config buildDefaultConfig(java.lang.String,java.lang.Boolean)>
<io.fabric8.kubernetes.client.utils.Utils: java.lang.Boolean getSystemPropertyOrEnvVar(java.lang.String,java.lang.Boolean)><---<io.fabric8.kubernetes.api.KubernetesHelper: java.lang.String getServiceURL(io.fabric8.kubernetes.api.model.Service)>
<io.fabric8.kubernetes.client.utils.Utils: java.lang.Boolean getSystemPropertyOrEnvVar(java.lang.String,java.lang.Boolean)><---<io.fabric8.arquillian.kubernetes.Configuration: java.lang.Boolean getBooleanProperty(java.lang.String,java.util.Map,java.lang.Boolean)>
<io.fabric8.kubernetes.client.dsl.internal.PodOperationContext: io.fabric8.kubernetes.client.dsl.internal.PodOperationContext withTerminatedStatus(boolean)><---<io.fabric8.openshift.client.dsl.internal.apps.DeploymentConfigOperationsImpl: io.fabric8.kubernetes.client.dsl.TimeTailPrettyLoggable terminated()>
<io.fabric8.kubernetes.client.dsl.internal.PodOperationContext: io.fabric8.kubernetes.client.dsl.internal.PodOperationContext withTerminatedStatus(boolean)><---<io.fabric8.openshift.client.dsl.internal.build.BuildOperationsImpl: io.fabric8.kubernetes.client.dsl.TimeTailPrettyLoggable terminated()>
<io.fabric8.kubernetes.client.dsl.internal.PodOperationContext: io.fabric8.kubernetes.client.dsl.internal.PodOperationContext withTimestamps(boolean)><---<io.fabric8.openshift.client.dsl.internal.apps.DeploymentConfigOperationsImpl: io.fabric8.kubernetes.client.dsl.BytesLimitTerminateTimeTailPrettyLoggable usingTimestamps()>
<io.fabric8.kubernetes.client.dsl.internal.PodOperationContext: io.fabric8.kubernetes.client.dsl.internal.PodOperationContext withTimestamps(boolean)><---<io.fabric8.openshift.client.dsl.internal.build.BuildOperationsImpl: io.fabric8.kubernetes.client.dsl.BytesLimitTerminateTimeTailPrettyLoggable usingTimestamps()>
<io.fabric8.kubernetes.client.dsl.PodResource: java.lang.Object getLog(java.lang.Boolean)><---<io.fabric8.kubernetes.assertions.PodsAssert: io.fabric8.kubernetes.assertions.PodLogsAssert logs(java.lang.String)>
<io.fabric8.kubernetes.client.dsl.VisitFromServerGetWatchDeleteRecreateWaitApplicable: java.lang.Object cascading(boolean)><---<io.fabric8.arquillian.utils.Util: void cleanupItem(io.fabric8.kubernetes.client.KubernetesClient,io.fabric8.arquillian.kubernetes.Session,io.fabric8.kubernetes.api.model.HasMetadata,java.util.List)>
<io.fabric8.kubernetes.client.ConfigBuilder: io.fabric8.kubernetes.client.SundrioConfigFluent withTrustCerts(java.lang.Boolean)><---<org.eclipse.jkube.kit.common.access.ClusterConfiguration: io.fabric8.kubernetes.client.Config getConfig()>
<io.fabric8.kubernetes.client.KubernetesClient: boolean hasApiGroup(java.lang.String,boolean)><---<org.eclipse.jkube.kit.common.util.OpenshiftHelper: boolean isOpenShift(io.fabric8.kubernetes.client.KubernetesClient)>
<io.fabric8.kubernetes.client.utils.KubernetesSerialization: void <init>(com.fasterxml.jackson.databind.ObjectMapper,boolean)><---<org.eclipse.jkube.kit.common.util.Serialization: void <clinit>()>
<io.fabric8.kubernetes.client.dsl.PrettyLoggable: java.lang.String getLog(boolean)><---<org.apache.dolphinscheduler.plugin.task.api.utils.K8sUtils: java.lang.String getPodLog(java.lang.String,java.lang.String)>
<io.fabric8.kubernetes.client.extension.ExtensionRootClientAdapter: boolean hasApiGroup(java.lang.String,boolean)><---<io.fabric8.knative.client.DefaultKnativeClient: boolean isSupported()>
