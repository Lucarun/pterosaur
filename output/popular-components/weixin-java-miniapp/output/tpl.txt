<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouter: void <init>(cn.binarywang.wx.miniapp.api.WxMaService-InterfaceClass-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouter: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule rule()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule handler(cn.binarywang.wx.miniapp.message.WxMaMessageHandler-InterfaceClass-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouter next()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouter: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule rule()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule async(boolean)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule content(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule handler(cn.binarywang.wx.miniapp.message.WxMaMessageHandler-InterfaceClass-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouter end()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouter: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule rule()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule async(boolean)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule content(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule handler(cn.binarywang.wx.miniapp.message.WxMaMessageHandler-InterfaceClass-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouter end()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouter: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule rule()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule async(boolean)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule content(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule handler(cn.binarywang.wx.miniapp.message.WxMaMessageHandler-InterfaceClass-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouter end()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouter: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule rule()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule async(boolean)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule content(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule handler(cn.binarywang.wx.miniapp.message.WxMaMessageHandler-InterfaceClass-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.message.WxMaMessageRouter wxMaMessageRouter(cn.binarywang.wx.miniapp.api.WxMaService)>---><cn.binarywang.wx.miniapp.message.WxMaMessageRouterRule: cn.binarywang.wx.miniapp.message.WxMaMessageRouter end()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMpService()>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl: void <init>()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: void lambda$wxMpService$0(cn.binarywang.wx.miniapp.api.WxMaService,com.faasadmin.faas.business.wx.module.ma.config.WxMaProperties$Config)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void <init>()>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: void lambda$wxMpService$0(cn.binarywang.wx.miniapp.api.WxMaService,com.faasadmin.faas.business.wx.module.ma.config.WxMaProperties$Config)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setAppid(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: void lambda$wxMpService$0(cn.binarywang.wx.miniapp.api.WxMaService,com.faasadmin.faas.business.wx.module.ma.config.WxMaProperties$Config)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setSecret(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: void lambda$wxMpService$0(cn.binarywang.wx.miniapp.api.WxMaService,com.faasadmin.faas.business.wx.module.ma.config.WxMaProperties$Config)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setToken(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: void lambda$wxMpService$0(cn.binarywang.wx.miniapp.api.WxMaService,com.faasadmin.faas.business.wx.module.ma.config.WxMaProperties$Config)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setAesKey(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: void lambda$wxMpService$0(cn.binarywang.wx.miniapp.api.WxMaService,com.faasadmin.faas.business.wx.module.ma.config.WxMaProperties$Config)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setMsgDataFormat(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.config.WxMaConfiguration: void lambda$wxMpService$0(cn.binarywang.wx.miniapp.api.WxMaService,com.faasadmin.faas.business.wx.module.ma.config.WxMaProperties$Config)>---><cn.binarywang.wx.miniapp.api.WxMaService: void addConfig(java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig-InterfaceClass-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaMediaController: java.util.List uploadMedia(java.lang.String,javax.servlet.http.HttpServletRequest)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaService switchoverTo(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaMediaController: java.util.List uploadMedia(java.lang.String,javax.servlet.http.HttpServletRequest)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMediaService getMediaService()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaMediaController: java.util.List uploadMedia(java.lang.String,javax.servlet.http.HttpServletRequest)>---><cn.binarywang.wx.miniapp.api.WxMaMediaService: me.chanjar.weixin.common.bean.result.WxMediaUploadResult uploadMedia(java.lang.String,java.io.File)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaMediaController: java.io.File getMedia(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaService switchoverTo(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaMediaController: java.io.File getMedia(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMediaService getMediaService()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaMediaController: java.io.File getMedia(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaMediaService: java.io.File getMedia(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String authGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaService switchoverTo(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String authGet(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: boolean checkSignature(java.lang.String,java.lang.String,java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaService switchoverTo(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.config.WxMaConfig getWxMaConfig()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.config.WxMaConfig: java.lang.String getMsgDataFormat()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: cn.binarywang.wx.miniapp.bean.WxMaMessage fromJson(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: cn.binarywang.wx.miniapp.bean.WxMaMessage fromXml(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.config.WxMaConfig getWxMaConfig()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: cn.binarywang.wx.miniapp.bean.WxMaMessage fromEncryptedJson(java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig-InterfaceClass-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.config.WxMaConfig getWxMaConfig()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaPortalController: java.lang.String post(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: cn.binarywang.wx.miniapp.bean.WxMaMessage fromEncryptedXml(java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig-InterfaceClass-SuperClass,java.lang.String,java.lang.String,java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String login(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaService switchoverTo(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String login(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaUserService getUserService()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String login(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaUserService: cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult getSessionInfo(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String login(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult: java.lang.String getSessionKey()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String login(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult: java.lang.String getOpenid()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String info(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaService switchoverTo(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String info(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaUserService getUserService()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String info(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaUserService: boolean checkUserInfo(java.lang.String,java.lang.String,java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String info(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaUserService getUserService()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String info(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaUserService: cn.binarywang.wx.miniapp.bean.WxMaUserInfo getUserInfo(java.lang.String,java.lang.String,java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String phone(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaService switchoverTo(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String phone(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaUserService getUserService()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String phone(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaUserService: boolean checkUserInfo(java.lang.String,java.lang.String,java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String phone(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaUserService getUserService()>
<com.faasadmin.faas.business.wx.module.ma.controller.WxMaUserController: java.lang.String phone(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaUserService: cn.binarywang.wx.miniapp.bean.WxMaPhoneNumberInfo getPhoneNoInfo(java.lang.String,java.lang.String,java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: java.lang.String toString()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMsgService getMsgService()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaKefuMessage: cn.binarywang.wx.miniapp.builder.TextMessageBuilder newTextBuilder()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: java.lang.String toJson()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.TextMessageBuilder: cn.binarywang.wx.miniapp.builder.TextMessageBuilder content(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: java.lang.String getFromUser()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.BaseBuilder: java.lang.Object toUser(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.TextMessageBuilder: cn.binarywang.wx.miniapp.bean.WxMaKefuMessage build()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaLogMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaMsgService: boolean sendKefuMsg(cn.binarywang.wx.miniapp.bean.WxMaKefuMessage-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMediaService getMediaService()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaMediaService: me.chanjar.weixin.common.bean.result.WxMediaUploadResult uploadMedia(java.lang.String,java.lang.String,java.io.InputStream)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMsgService getMsgService()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaKefuMessage: cn.binarywang.wx.miniapp.builder.ImageMessageBuilder newImageBuilder()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.ImageMessageBuilder: cn.binarywang.wx.miniapp.builder.ImageMessageBuilder mediaId(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: java.lang.String getFromUser()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.BaseBuilder: java.lang.Object toUser(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.ImageMessageBuilder: cn.binarywang.wx.miniapp.bean.WxMaKefuMessage build()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaPicMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaMsgService: boolean sendKefuMsg(cn.binarywang.wx.miniapp.bean.WxMaKefuMessage-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaQrcodeService getQrcodeService()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaQrcodeService: java.io.File createQrcode(java.lang.String,int)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMediaService getMediaService()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaMediaService: me.chanjar.weixin.common.bean.result.WxMediaUploadResult uploadMedia(java.lang.String,java.io.File)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMsgService getMsgService()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaKefuMessage: cn.binarywang.wx.miniapp.builder.ImageMessageBuilder newImageBuilder()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.ImageMessageBuilder: cn.binarywang.wx.miniapp.builder.ImageMessageBuilder mediaId(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: java.lang.String getFromUser()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.BaseBuilder: java.lang.Object toUser(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.ImageMessageBuilder: cn.binarywang.wx.miniapp.bean.WxMaKefuMessage build()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaMsgService: boolean sendKefuMsg(cn.binarywang.wx.miniapp.bean.WxMaKefuMessage-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMsgService getMsgService()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage: cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$WxMaSubscribeMessageBuilder builder()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$WxMaSubscribeMessageBuilder: cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$WxMaSubscribeMessageBuilder templateId(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$MsgData: void <init>(java.lang.String,java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$WxMaSubscribeMessageBuilder: cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$WxMaSubscribeMessageBuilder data(java.util.List)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: java.lang.String getFromUser()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$WxMaSubscribeMessageBuilder: cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$WxMaSubscribeMessageBuilder toUser(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage$WxMaSubscribeMessageBuilder: cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage build()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaSubscribeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaMsgService: void sendSubscribeMsg(cn.binarywang.wx.miniapp.bean.WxMaSubscribeMessage-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaTextMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaService: cn.binarywang.wx.miniapp.api.WxMaMsgService getMsgService()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaTextMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaKefuMessage: cn.binarywang.wx.miniapp.builder.TextMessageBuilder newTextBuilder()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaTextMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.TextMessageBuilder: cn.binarywang.wx.miniapp.builder.TextMessageBuilder content(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaTextMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.bean.WxMaMessage: java.lang.String getFromUser()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaTextMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.BaseBuilder: java.lang.Object toUser(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaTextMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.builder.TextMessageBuilder: cn.binarywang.wx.miniapp.bean.WxMaKefuMessage build()>
<com.faasadmin.faas.business.wx.module.ma.handler.WxMaTextMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>---><cn.binarywang.wx.miniapp.api.WxMaMsgService: boolean sendKefuMsg(cn.binarywang.wx.miniapp.bean.WxMaKefuMessage-SuperClass)>
<com.faasadmin.faas.business.wx.module.ma.service.impl.WxMaBusinessServiceImpl: void lambda$initLocalCache$0(com.faasadmin.faas.services.lessee.dal.dataobject.lesseeConfig.SaasLesseeConfigDO)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void <init>()>
<com.faasadmin.faas.business.wx.module.ma.service.impl.WxMaBusinessServiceImpl: void lambda$initLocalCache$0(com.faasadmin.faas.services.lessee.dal.dataobject.lesseeConfig.SaasLesseeConfigDO)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setAppid(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.service.impl.WxMaBusinessServiceImpl: void lambda$initLocalCache$0(com.faasadmin.faas.services.lessee.dal.dataobject.lesseeConfig.SaasLesseeConfigDO)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setSecret(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.service.impl.WxMaBusinessServiceImpl: void lambda$initLocalCache$0(com.faasadmin.faas.services.lessee.dal.dataobject.lesseeConfig.SaasLesseeConfigDO)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setToken(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.service.impl.WxMaBusinessServiceImpl: void lambda$initLocalCache$0(com.faasadmin.faas.services.lessee.dal.dataobject.lesseeConfig.SaasLesseeConfigDO)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setAesKey(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.service.impl.WxMaBusinessServiceImpl: void lambda$initLocalCache$0(com.faasadmin.faas.services.lessee.dal.dataobject.lesseeConfig.SaasLesseeConfigDO)>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setMsgDataFormat(java.lang.String)>
<com.faasadmin.faas.business.wx.module.ma.service.impl.WxMaBusinessServiceImpl: void lambda$initLocalCache$0(com.faasadmin.faas.services.lessee.dal.dataobject.lesseeConfig.SaasLesseeConfigDO)>---><cn.binarywang.wx.miniapp.api.WxMaService: void addConfig(java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig-InterfaceClass-SuperClass)>
<me.chanjar.weixin.open.bean.result.WxOpenMaVisitStatusResult: me.chanjar.weixin.open.bean.result.WxOpenMaVisitStatusResult fromJson(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaPrivacyServiceImpl: me.chanjar.weixin.open.bean.ma.privacy.GetPrivacySettingResult getPrivacySetting(java.lang.Integer)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaPrivacyServiceImpl: void setPrivacySetting(me.chanjar.weixin.open.bean.ma.privacy.SetPrivacySetting)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaPrivacyServiceImpl: me.chanjar.weixin.open.bean.ma.privacy.GetPrivacyInterfaceResult getPrivacyInterface()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaPrivacyServiceImpl: me.chanjar.weixin.open.bean.ma.privacy.ApplyPrivacyInterfaceResult applyPrivacyInterface(me.chanjar.weixin.open.bean.ma.privacy.ApplyPrivacyInterface)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaAccountBasicInfoResult getAccountBasicInfo()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaSetNickameResult setNickname(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaQueryNicknameStatusResult querySetNicknameStatus(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaCheckNickameResult checkWxVerifyNickname(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult modifyHeadImage(java.lang.String,float,float,float,float)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult modifySignature(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult componentRebindAdmin(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: java.lang.String getAllCategories()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult addCategory(java.util.List)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult deleteCategory(int,int)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaBeenSetCategoryResult getCategory()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult modifyCategory(me.chanjar.weixin.open.bean.ma.WxFastMaCategory)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaBasicServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaGetOrderPathResult getOrderPathInfo(int)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: void <init>(me.chanjar.weixin.open.api.WxOpenComponentService,java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig)>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl: void <init>()>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: void <init>(me.chanjar.weixin.open.api.WxOpenComponentService,java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig)>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceHttpClientImpl: void initHttp()>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaAccountBasicInfoResult getAccountBasicInfo()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaSetNickameResult setNickname(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaQueryNicknameStatusResult querySetNicknameStatus(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaCheckNickameResult checkWxVerifyNickname(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult modifyHeadImage(java.lang.String,float,float,float,float)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult modifySignature(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult componentRebindAdmin(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: java.lang.String getAllCategories()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult addCategory(java.util.List)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult deleteCategory(int,int)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxFastMaBeenSetCategoryResult getCategory()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenFastMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult modifyCategory(me.chanjar.weixin.open.bean.ma.WxFastMaCategory)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: me.chanjar.weixin.open.api.WxOpenMaService getWxMaServiceByAppid(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: void setMaxRetryTimes(int)>
<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: me.chanjar.weixin.open.api.WxOpenMaService getWxMaServiceByAppid(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: void setRetrySleepMillis(int)>
<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: me.chanjar.weixin.open.api.WxOpenFastMaService getWxFastMaServiceByAppid(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: void setMaxRetryTimes(int)>
<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: me.chanjar.weixin.open.api.WxOpenFastMaService getWxFastMaServiceByAppid(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: void setRetrySleepMillis(int)>
<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult miniappJscode2Session(java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult: cn.binarywang.wx.miniapp.bean.WxMaJscode2SessionResult fromJson(java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: java.lang.String openAccountServicePost(java.lang.String,java.lang.String,java.lang.String,com.google.gson.JsonObject)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenIcpVerifyTaskResult queryIcpVerifyTask(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenIcpCreateIcpVerifyTaskResult createIcpVerifyTask()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenIcpCreateIcpVerifyTaskResult createIcpVerifyTask()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenUploadIcpMediaResult uploadIcpMedia(me.chanjar.weixin.open.bean.icp.WxOpenUploadIcpMediaParam)>---><cn.binarywang.wx.miniapp.api.WxMaService: me.chanjar.weixin.common.util.http.RequestHttp getRequestHttp()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenUploadIcpMediaResult uploadIcpMedia(me.chanjar.weixin.open.bean.icp.WxOpenUploadIcpMediaParam)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.Object execute(me.chanjar.weixin.common.util.http.RequestExecutor-InterfaceClass,java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenUploadIcpMediaResult uploadIcpMedia(me.chanjar.weixin.open.bean.icp.WxOpenUploadIcpMediaParam)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult cancelApplyIcpFiling()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult cancelApplyIcpFiling()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenApplyIcpFilingResult applyIcpFiling(me.chanjar.weixin.open.bean.icp.WxOpenApplyIcpFilingParam)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenApplyIcpFilingResult applyIcpFiling(me.chanjar.weixin.open.bean.icp.WxOpenApplyIcpFilingParam)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult cancelIcpFiling(java.lang.Integer)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,com.google.gson.JsonObject)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenIcpEntranceInfoResult getIcpEntranceInfo()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenIcpEntranceInfoResult getIcpEntranceInfo()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenOnlineIcpOrderResult getOnlineIcpOrder()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenOnlineIcpOrderResult getOnlineIcpOrder()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpServiceContentTypesResult queryIcpServiceContentTypes()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpServiceContentTypesResult queryIcpServiceContentTypes()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpCertificateTypeResult queryIcpCertificateTypes()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpCertificateTypeResult queryIcpCertificateTypes()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpDistrictCodeResult queryIcpDistrictCode()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpDistrictCodeResult queryIcpDistrictCode()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpNrlxTypesResult queryIcpNrlxTypes()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpNrlxTypesResult queryIcpNrlxTypes()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpSubjectTypeResult queryIcpSubjectTypes()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: me.chanjar.weixin.open.bean.icp.WxOpenQueryIcpSubjectTypeResult queryIcpSubjectTypes()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: java.io.File getIcpMedia(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: me.chanjar.weixin.common.util.http.RequestHttp getRequestHttp()>
<me.chanjar.weixin.open.api.impl.WxOpenMaIcpServiceImpl: java.io.File getIcpMedia(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.Object execute(me.chanjar.weixin.common.util.http.RequestExecutor-InterfaceClass,java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaShoppingOrdersServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult upload(me.chanjar.weixin.open.bean.shoppingOrders.ShoppingInfo)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaShoppingOrdersServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult upload(me.chanjar.weixin.open.bean.shoppingOrders.ShippingInfo)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaShoppingOrdersServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult upload(me.chanjar.weixin.open.bean.shoppingOrders.CombinedShoppingInfo)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaShoppingOrdersServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult upload(me.chanjar.weixin.open.bean.shoppingOrders.CombinedShippingInfo)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaShoppingOrdersServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult openShoppingOrderProductPermission()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaShoppingOrdersServiceImpl: me.chanjar.weixin.open.bean.shoppingOrders.WxOpenShoppingOrdersConfirmResult confirmProductPermission()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaShoppingOrdersServiceImpl: me.chanjar.weixin.open.bean.shoppingOrders.WxOpenShoppingInfoVerifyUploadResult verifyUploadResult(me.chanjar.weixin.open.bean.shoppingOrders.ShoppingInfoVerifyUpload)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMpServiceImpl: me.chanjar.weixin.open.bean.result.WxAmpLinkResult getWxAmpLink()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMpServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult wxAmpLink(java.lang.String,java.lang.String,java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMpServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult wxAmpUnLink(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: void <init>(me.chanjar.weixin.open.api.WxOpenComponentService,java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig)>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl: void <init>()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: void <init>(me.chanjar.weixin.open.api.WxOpenComponentService,java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig)>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceHttpClientImpl: void initHttp()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaDomainResult modifyDomain(java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaDomainResult modifyDomain(java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: java.lang.String setWebViewDomain(java.lang.String,java.util.List)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaWebDomainResult setWebViewDomainInfo(java.lang.String,java.util.List)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaDomainConfirmFileResult getWebviewDomainConfirmFile()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: java.lang.String getAccountBasicInfo()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaBindTesterResult bindTester(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaBindTesterResult bindTester(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult unbindTester(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult unbindTester(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult unbindTesterByUserStr(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult unbindTesterByUserStr(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaTesterListResult getTesterList()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaTesterListResult getTesterList()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult changeWxaSearchStatus(java.lang.Integer)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult changeWxaSearchStatus(java.lang.Integer)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaSearchStatusResult getWxaSearchStatus()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaSearchStatusResult getWxaSearchStatus()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaShowItemResult getShowWxaItem()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaShowItemResult getShowWxaItem()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult updateShowWxaItem(java.lang.Integer,java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult updateShowWxaItem(java.lang.Integer,java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult codeCommit(java.lang.Long,java.lang.String,java.lang.String,java.lang.Object)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult codeCommit(java.lang.Long,java.lang.String,java.lang.String,java.lang.Object)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: java.io.File getTestQrcode(java.lang.String,java.util.Map)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: me.chanjar.weixin.common.util.http.RequestHttp getRequestHttp()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: java.io.File getTestQrcode(java.lang.String,java.util.Map)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.Object execute(me.chanjar.weixin.common.util.http.RequestExecutor-InterfaceClass,java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult verifyBetaWeapp(me.chanjar.weixin.open.bean.message.WxOpenMaVerifyBetaWeappMessage)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult verifyBetaWeapp(me.chanjar.weixin.open.bean.message.WxOpenMaVerifyBetaWeappMessage)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaCategoryListResult getCategoryList()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaCategoryListResult getCategoryList()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaPageListResult getPageList()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaPageListResult getPageList()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaSubmitAuditResult submitAudit(me.chanjar.weixin.open.bean.message.WxOpenMaSubmitAuditMessage)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaSubmitAuditResult submitAudit(me.chanjar.weixin.open.bean.message.WxOpenMaSubmitAuditMessage)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaQueryAuditResult getAuditStatus(java.lang.Long)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaQueryAuditResult getAuditStatus(java.lang.Long)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaQueryAuditResult getLatestAuditStatus()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaQueryAuditResult getLatestAuditStatus()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult releaseAudited()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult releaseAudited()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult changeVisitStatus(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult changeVisitStatus(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaVisitStatusResult getVisitStatus()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult revertCodeRelease()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult revertCodeRelease()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaHistoryVersionResult getHistoryVersion()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaHistoryVersionResult getHistoryVersion()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult undoCodeAudit()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult undoCodeAudit()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: java.lang.String getSupportVersion()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaWeappSupportVersionResult getSupportVersionInfo()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: java.lang.String setSupportVersion(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult setSupportVersionInfo(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult grayRelease(java.lang.Integer)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult grayRelease(java.lang.Integer)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult revertGrayRelease()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult revertGrayRelease()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaGrayReleasePlanResult getGrayReleasePlan()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaGrayReleasePlanResult getGrayReleasePlan()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaGetCodePrivacyInfoResult getCodePrivacyInfo()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaGetCodePrivacyInfoResult getCodePrivacyInfo()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaQueryQuotaResult queryQuota()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaQueryQuotaResult queryQuota()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: java.lang.Boolean speedAudit(java.lang.Long)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: java.lang.Boolean speedAudit(java.lang.Long)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult addQrcodeJump(me.chanjar.weixin.open.bean.result.WxQrcodeJumpRule)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult addQrcodeJump(me.chanjar.weixin.open.bean.result.WxQrcodeJumpRule)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxGetQrcodeJumpResult getQrcodeJump()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxGetQrcodeJumpResult getQrcodeJump()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxDownlooadQrcodeJumpResult downloadQrcodeJump()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxDownlooadQrcodeJumpResult downloadQrcodeJump()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult deleteQrcodeJump(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult deleteQrcodeJump(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult publishQrcodeJump(java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult publishQrcodeJump(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.ma.WxMaScheme generateMaScheme(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Long)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.ma.WxMaScheme generateMaScheme(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.Long)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult registerShopComponent()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult registerShopComponent()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: cn.binarywang.wx.miniapp.bean.WxMaAuditMediaUploadResult uploadMedia(java.io.File)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String upload(java.lang.String,me.chanjar.weixin.common.bean.CommonUploadParam)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: cn.binarywang.wx.miniapp.bean.WxMaAuditMediaUploadResult uploadMedia(java.io.File)>---><cn.binarywang.wx.miniapp.bean.WxMaAuditMediaUploadResult: cn.binarywang.wx.miniapp.bean.WxMaAuditMediaUploadResult fromJson(java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenVersioninfoResult getVersionInfo()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenVersioninfoResult getVersionInfo()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult setPrefetchDomain(me.chanjar.weixin.open.bean.ma.WxMaPrefetchDomain)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult setPrefetchDomain(me.chanjar.weixin.open.bean.ma.WxMaPrefetchDomain)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaPrefetchDomainResult getPrefetchDomain()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaPrefetchDomainResult getPrefetchDomain()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaApplyLiveInfoResult applyLiveInfo()>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenMaApplyLiveInfoResult applyLiveInfo()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: cn.binarywang.wx.miniapp.bean.WxMaUploadAuthMaterialResult uploadAuthMaterial(java.io.File)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: me.chanjar.weixin.common.util.http.RequestHttp getRequestHttp()>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: cn.binarywang.wx.miniapp.bean.WxMaUploadAuthMaterialResult uploadAuthMaterial(java.io.File)>---><cn.binarywang.wx.miniapp.executor.UploadAuthMaterialRequestExecutor: me.chanjar.weixin.common.util.http.RequestExecutor create(me.chanjar.weixin.common.util.http.RequestHttp-InterfaceClass)>
<me.chanjar.weixin.open.api.impl.WxOpenMaServiceImpl: cn.binarywang.wx.miniapp.bean.WxMaUploadAuthMaterialResult uploadAuthMaterial(java.io.File)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.Object execute(me.chanjar.weixin.common.util.http.RequestExecutor-InterfaceClass,java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopGoodsServiceImpl: void <init>()>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl: void <init>()>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopGoodsServiceImpl: me.chanjar.weixin.open.bean.minishopgoods.GoodsCatList getMinishopGoodsCat(me.chanjar.weixin.open.bean.minishopgoods.ParentCatId)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopGoodsServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult addMinishopGoodsSPU(me.chanjar.weixin.open.bean.minishopgoods.AddMinishopGoodsSPU)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopServiceImpl: void <init>(me.chanjar.weixin.open.api.WxOpenComponentService,java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig)>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl: void <init>()>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopServiceImpl: void <init>(me.chanjar.weixin.open.api.WxOpenComponentService,java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: void addConfig(java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig-InterfaceClass-SuperClass)>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopServiceImpl: void <init>(me.chanjar.weixin.open.api.WxOpenComponentService,java.lang.String,cn.binarywang.wx.miniapp.config.WxMaConfig)>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceHttpClientImpl: void initHttp()>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopServiceImpl: me.chanjar.weixin.open.bean.result.WxOpenResult submitMerchantInfo(java.lang.String,java.lang.String,me.chanjar.weixin.open.bean.minishop.MinishopBusiLicense,me.chanjar.weixin.open.bean.minishop.MinishopOrganizationCodeInfo,me.chanjar.weixin.open.bean.minishop.MinishopIdcardInfo,me.chanjar.weixin.open.bean.minishop.MinishopSuperAdministratorInfo,java.lang.String)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopServiceImpl: java.lang.String uploadImagePicFile(java.lang.Integer,java.lang.Integer,java.io.File)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String getAccessToken(boolean)>
<me.chanjar.weixin.open.api.impl.WxOpenMinishopServiceImpl: java.lang.String uploadImagePicFile(java.lang.Integer,java.lang.Integer,java.io.File)>---><cn.binarywang.wx.miniapp.api.impl.BaseWxMaServiceImpl: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthSubmitResult submit(me.chanjar.weixin.open.bean.auth.MaAuthSubmitParam)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthSubmitResult submit(me.chanjar.weixin.open.bean.auth.MaAuthSubmitParam)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthQueryResult query(java.lang.String)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthQueryResult query(java.lang.String)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthUploadResult upload(me.chanjar.weixin.common.bean.CommonUploadData)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String upload(java.lang.String,me.chanjar.weixin.common.bean.CommonUploadParam)>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthUploadResult upload(me.chanjar.weixin.common.bean.CommonUploadData)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthSubmitResult resubmit(me.chanjar.weixin.open.bean.auth.MaAuthResubmitParam)>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String post(java.lang.String,java.lang.Object)>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthSubmitResult resubmit(me.chanjar.weixin.open.bean.auth.MaAuthResubmitParam)>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthQueryIdentityTreeResult queryIdentityTree()>---><cn.binarywang.wx.miniapp.api.WxMaService: java.lang.String get(java.lang.String,java.lang.String)>
<me.chanjar.weixin.open.api.impl.WxOpenMaAuthServiceImpl: me.chanjar.weixin.open.bean.auth.MaAuthQueryIdentityTreeResult queryIdentityTree()>---><cn.binarywang.wx.miniapp.json.WxMaGsonBuilder: com.google.gson.Gson create()>
<cn.wekture.fastapi.wechat.WechatConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMaService()>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void <init>()>
<cn.wekture.fastapi.wechat.WechatConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMaService()>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setAppid(java.lang.String)>
<cn.wekture.fastapi.wechat.WechatConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMaService()>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setSecret(java.lang.String)>
<cn.wekture.fastapi.wechat.WechatConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMaService()>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setToken(java.lang.String)>
<cn.wekture.fastapi.wechat.WechatConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMaService()>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setAesKey(java.lang.String)>
<cn.wekture.fastapi.wechat.WechatConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMaService()>---><cn.binarywang.wx.miniapp.config.impl.WxMaDefaultConfigImpl: void setMsgDataFormat(java.lang.String)>
<cn.wekture.fastapi.wechat.WechatConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMaService()>---><cn.binarywang.wx.miniapp.api.impl.WxMaServiceImpl: void <init>()>
<cn.wekture.fastapi.wechat.WechatConfiguration: cn.binarywang.wx.miniapp.api.WxMaService wxMaService()>---><cn.binarywang.wx.miniapp.api.WxMaService: void setWxMaConfig(cn.binarywang.wx.miniapp.config.WxMaConfig-InterfaceClass-SuperClass)>
