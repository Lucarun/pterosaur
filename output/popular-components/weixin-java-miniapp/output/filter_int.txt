<cn.binarywang.wx.miniapp.api.WxMaService: void setMaxRetryTimes(int)><---<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: me.chanjar.weixin.open.api.WxOpenMaService getWxMaServiceByAppid(java.lang.String)>
<cn.binarywang.wx.miniapp.api.WxMaService: void setMaxRetryTimes(int)><---<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: me.chanjar.weixin.open.api.WxOpenFastMaService getWxFastMaServiceByAppid(java.lang.String)>
<cn.binarywang.wx.miniapp.api.WxMaService: void setRetrySleepMillis(int)><---<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: me.chanjar.weixin.open.api.WxOpenMaService getWxMaServiceByAppid(java.lang.String)>
<cn.binarywang.wx.miniapp.api.WxMaService: void setRetrySleepMillis(int)><---<me.chanjar.weixin.open.api.impl.WxOpenComponentServiceImpl: me.chanjar.weixin.open.api.WxOpenFastMaService getWxFastMaServiceByAppid(java.lang.String)>
<cn.binarywang.wx.miniapp.api.WxMaQrcodeService: java.io.File createQrcode(java.lang.String,int)><---<com.faasadmin.faas.business.wx.module.ma.handler.WxMaQrCodeMsgHandler: cn.binarywang.wx.miniapp.message.WxMaXmlOutMessage handle(cn.binarywang.wx.miniapp.bean.WxMaMessage,java.util.Map,cn.binarywang.wx.miniapp.api.WxMaService,me.chanjar.weixin.common.session.WxSessionManager)>
