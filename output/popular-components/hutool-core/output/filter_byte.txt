



（1）准备收集海量数据：

找到一个upstream jar，然后找到一批downstream jars

过程中遇到了很多小细节，目前工具完善度80% （还有20%是一些lib和class的匹配），目前收集了很多调用链。

目标：
从调用链分组最终形成A--B.x() C--B.x() D--B.x() E --B.x()
从调用链提取上下文。


（2）继续收集数据集


（3）中远项目的推进，系统升级以及和老师对接进度，确定测试项目


另外捋一下思路，防止忘记

（1）针对call chain分类，按照被调用的方法名来sort
（2）之前做的一些测试，可以理解为我得找到一个合适的prompt，提示词，让llm更容易分析类似的api或者是黑盒的api




（4）
貌似有一点儿发现和想法


1.参数，像是这种String类型，我们无需关注field，当然追求极致有时得关注它的其他，比如他的index。所以一般认为它的不可再分的。而一些object肯定关注field。

2.其实跟进去我们知道BeanPath.create(expression) 里面的express最终流入了BeanPath.patternParts。

（5）

1.突然想到是否给予参数的类型先分类，比如基本类型（byte、short、int、long、float、double、boolean、char）

2。非基本类型（引用类型）
（1）数组array
（2）类class
（3）接口Interface
（4）函数式接口（Functional Interface）
（5）泛型类型（Generic Type）
（6）可变参数（Varargs）
（7）枚举类型（Enum）
 (8）记录类型（Record Type）
